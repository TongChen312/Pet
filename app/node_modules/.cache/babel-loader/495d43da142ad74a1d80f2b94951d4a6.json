{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\Pet\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\Pet\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\Pet\\app\\src\\components\\xz\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\Pet\\app\\src\\components\\xz\\Cart.vue","mtime":1567410540000},{"path":"C:\\Users\\Administrator\\Desktop\\Pet\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\Administrator\\Desktop\\Pet\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\Administrator\\Desktop\\Pet\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  created: function created() {\n    // 当前组建创建成功回调函数\n    this.load();\n  },\n  data: function data() {\n    return {\n      list: [] //当前登录用户购物车列表\n\n    };\n  },\n  methods: {\n    load: function load() {\n      var _this = this;\n\n      // 功能:获取当前用户购物车列表\n      // 1.创建url请求服务器地址\n      var url = \"carts\"; // 2.发送ajax请求(让服务器程序完成功能)\n\n      this.axios.get(url).then(function (res) {\n        if (res.data.code == -1) {\n          // 4.如果服务器返回-1 请登录\n          _this.$messagebox(\"消息\", \"请登录\").then(function (res) {\n            //回调函数(用户点击确认按钮后调用函数)\n            _this.$router.push(\"Login\");\n          });\n        } else {\n          // this.list=res.data.data;\n          //添加一个新功能,为数据添加属性cd\n          //3.1 创建一个循环,遍历res.data.data中数据\n          var rows = res.data.data;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n              //3.2 为其添加属性cd值false\n              item.cd = false;\n            } //3.3 将新数组赋值list(顺序)\n\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this.list = rows;\n        } // 3.获取服务器返回的数据\n\n      });\n    },\n    deleteItem: function deleteItem(event) {\n      var _this2 = this;\n\n      //功能：用户点击删除按钮完成删除指定\n      //(1)为按钮绑定点击事件调用delete\n      //(2)显示确认框如果用户选择确定\n      // console.log(event.target.dataset.id)\n      this.$messagebox.confirm(\"是否删除指定数据\").then(function (res) {\n        //(3)将当前商品id传递函数\n        var id = event.target.dataset.id; //(4)发送ajax请求完成删除任务\n\n        var url = \"delItem\";\n        var obj = {\n          id: id\n        };\n\n        _this2.axios.get(url, {\n          params: obj\n        });\n      }).then(function (res) {\n        //(5)删除成功 提示“删除成功”\n        if (res.data.code == 1) {\n          _this2.$toast(\"删除成功\");\n\n          _this2.load(); //刷新\n\n        }\n      }).catch(function (err) {});\n    },\n    deleteItems: function deleteItems() {\n      var _this3 = this;\n\n      //功能：删除用户删除中多个商品\n      //(1)显示确认对话框\n      this.$messagebox.confirm(\"是否删除指定数据\").then(function (res) {\n        //(2)创建变量保存选中id值\n        var all = []; //(3)创建循环遍历数组中的每个元素\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this3.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n\n            //(4)判断当前属性cd是否等于true\n            if (item.cd === true) {\n              //(5)拼接id\n              all = all.concat(item.id);\n            }\n          } //(6)去除字符中最后一个逗号\n\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        var all = all.toString(); // console.log(all);\n        //(7)删除用户是否选中商品,请选择需要删除商品\n\n        if (all == \"\") {\n          _this3.$toast(\"请选择需要删除商品\");\n\n          return;\n        } //(8)创建url 创建obj 发送ajax\n\n\n        var url = \"delItems\";\n        var obj = {\n          id: all\n        };\n\n        _this3.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          //(9)获取服务器返回数据\n          //(10)删除成功 提示“删除成功”\n          console.log(res.data);\n\n          if (res.data.code == 1) {\n            _this3.$toast(\"删除成功\"); //(11)刷新操作 load\n\n\n            _this3.load(); //刷新\n\n          } else if (res.data.code == -1) {\n            _this3.$toast(\"失败\");\n          }\n        });\n      });\n    },\n    selectAll: function selectAll(event) {\n      //(1)获取当前按钮状态\n      var cb = event.target.checked; //(2)创建循环遍历所有商品属性\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          item.cd = cb;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n      <h3>购物车</h3>\r\n      <!-- <div>{{list}}</div> -->\r\n      <!-- 顶部复选框,全选 -->\r\n    <div class=\"selectall\">\r\n      全选<input type=\"checkbox\" @click=\"selectAll\">\r\n    </div>\r\n    <!-- 2.商品信息 -->\r\n    <div class=\"cart-item\"  v-for=\"(item,index) of list\" :key=\"index\">\r\n      <div class=\"leftText\">\r\n        <input   type=\"checkbox\"  v-model=\"item.cd\">\r\n        <div class=\"lname\">{{item.lname}}</div>\r\n        <div class=\"price\">{{item.price}}</div>\r\n        <mt-button :data-id=\"item.id\" @click=\"deleteItem\">删除</mt-button>\r\n      </div>\r\n    </div>\r\n    <!-- 3.购物车中商品数量：删除选中的商品,清空购物车 -->\r\n    <div>\r\n      购物车中商品数量\r\n      <span style=\"color:red\">0</span>\r\n      <mt-button  @click=\"deleteItems\">删除选中的商品</mt-button>\r\n      <mt-button>清空购物车</mt-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  created(){\r\n    // 当前组建创建成功回调函数\r\n    this.load();\r\n  },\r\n  data(){\r\n    return{\r\n      list:[]//当前登录用户购物车列表\r\n    }\r\n  },\r\n  methods:{\r\n    load(){\r\n      // 功能:获取当前用户购物车列表\r\n      // 1.创建url请求服务器地址\r\n      var url=\"carts\";\r\n      // 2.发送ajax请求(让服务器程序完成功能)\r\n      this.axios.get(url).then(res=>{\r\n        if(res.data.code==-1){\r\n        // 4.如果服务器返回-1 请登录\r\n        this.$messagebox(\"消息\",\"请登录\").then(res=>{\r\n          //回调函数(用户点击确认按钮后调用函数)\r\n          this.$router.push(\"Login\")\r\n        })\r\n        }else{\r\n          // this.list=res.data.data;\r\n          //添加一个新功能,为数据添加属性cd\r\n          //3.1 创建一个循环,遍历res.data.data中数据\r\n          var rows=res.data.data;\r\n          for(var item of rows){\r\n            //3.2 为其添加属性cd值false\r\n            item.cd=false;\r\n          }  \r\n          //3.3 将新数组赋值list(顺序)\r\n          this.list=rows;\r\n        }\r\n      // 3.获取服务器返回的数据\r\n      })\r\n    },\r\n    deleteItem(event){\r\n      //功能：用户点击删除按钮完成删除指定\r\n      //(1)为按钮绑定点击事件调用delete\r\n      //(2)显示确认框如果用户选择确定\r\n      // console.log(event.target.dataset.id)\r\n      this.$messagebox.confirm(\"是否删除指定数据\").then(res=>{\r\n      //(3)将当前商品id传递函数\r\n        var id=event.target.dataset.id;     \r\n               //(4)发送ajax请求完成删除任务\r\n        var url=\"delItem\";\r\n        var obj={id:id}\r\n        this.axios.get(url,{\r\n          params:obj\r\n        })\r\n      }).then(res=>{\r\n        //(5)删除成功 提示“删除成功”\r\n       if(res.data.code==1){\r\n        this.$toast(\"删除成功\");\r\n        this.load();//刷新\r\n       }\r\n      }).catch(err=>{\r\n\r\n      })\r\n\r\n    },\r\n    deleteItems(){\r\n      //功能：删除用户删除中多个商品\r\n      //(1)显示确认对话框\r\n       this.$messagebox.confirm(\"是否删除指定数据\").then(res=>{\r\n      //(2)创建变量保存选中id值\r\n        var all=[]\r\n      //(3)创建循环遍历数组中的每个元素\r\n        for(var item of this.list){\r\n      //(4)判断当前属性cd是否等于true\r\n          if(item.cd===true){\r\n          //(5)拼接id\r\n            all=all.concat(item.id)\r\n          }\r\n        }\r\n      //(6)去除字符中最后一个逗号\r\n      var all=all.toString();\r\n      // console.log(all);\r\n      //(7)删除用户是否选中商品,请选择需要删除商品\r\n      if(all==\"\"){\r\n        this.$toast(\"请选择需要删除商品\")\r\n        return\r\n      }\r\n      //(8)创建url 创建obj 发送ajax\r\n      var url=\"delItems\";\r\n      var obj={id:all}\r\n      this.axios.get(url,{params:obj}).then(res=>{\r\n        //(9)获取服务器返回数据\r\n        //(10)删除成功 提示“删除成功”\r\n        console.log(res.data)\r\n       if(res.data.code==1){\r\n        this.$toast(\"删除成功\");\r\n        //(11)刷新操作 load\r\n        this.load();//刷新\r\n       }else if(res.data.code==-1){\r\n        this.$toast(\"失败\");\r\n       }\r\n       })\r\n      })\r\n    },\r\n    selectAll(event){\r\n      //(1)获取当前按钮状态\r\n      var  cb=event.target.checked\r\n      //(2)创建循环遍历所有商品属性\r\n      for(var item of this.list){\r\n        item.cd=cb;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n  .cart-item{\r\n    display:flex;\r\n    justify-content:space-between;/*两端对齐*/\r\n    align-items:center;\r\n    border-bottom:1px solid #ccc;\r\n    margin-top:25px;\r\n  }\r\n  /* 修改左侧文字  复选框 商品名称 价格 */\r\n  .leftText{\r\n    display:flex;\r\n    align-items:center;/*垂直居中*/\r\n  }\r\n  /* 商品名称 */\r\n  .lname{\r\n    margin-left:25px;\r\n  }\r\n</style>"],"sourceRoot":"src\\components\\xz"}]}